[{"/Users/hanguyen/workspace/scentsible/src/index.js":"1","/Users/hanguyen/workspace/scentsible/src/reportWebVitals.js":"2","/Users/hanguyen/workspace/scentsible/src/components/Scentsible.js":"3","/Users/hanguyen/workspace/scentsible/src/components/product/Product.js":"4","/Users/hanguyen/workspace/scentsible/src/components/ApplicationViews.js":"5","/Users/hanguyen/workspace/scentsible/src/components/auth/Login.js":"6","/Users/hanguyen/workspace/scentsible/src/components/auth/Register.js":"7","/Users/hanguyen/workspace/scentsible/src/components/nav/NavBar.js":"8","/Users/hanguyen/workspace/scentsible/src/components/header/Header.js":"9","/Users/hanguyen/workspace/scentsible/src/components/auth/Logout.js":"10","/Users/hanguyen/workspace/scentsible/src/components/group/GroupProvider.js":"11","/Users/hanguyen/workspace/scentsible/src/components/brand/BrandProvider.js":"12","/Users/hanguyen/workspace/scentsible/src/components/rating/RatingProvider.js":"13","/Users/hanguyen/workspace/scentsible/src/components/product/ProductProvider.js":"14","/Users/hanguyen/workspace/scentsible/src/components/product/ProductForm.js":"15","/Users/hanguyen/workspace/scentsible/src/components/family/FamilyProvider.js":"16","/Users/hanguyen/workspace/scentsible/src/components/product/ProductList.js":"17","/Users/hanguyen/workspace/scentsible/src/components/product/ProductDetail.js":"18","/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewForm.js":"19","/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewProvider.js":"20","/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewList.js":"21","/Users/hanguyen/workspace/scentsible/src/components/home/Homepage.js":"22"},{"size":335,"mtime":1610139705106,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607714159491,"results":"25","hashOfConfig":"24"},{"size":1344,"mtime":1610139705088,"results":"26","hashOfConfig":"24"},{"size":0,"mtime":1610141193934,"results":"27","hashOfConfig":"24"},{"size":3789,"mtime":1610253010544,"results":"28","hashOfConfig":"24"},{"size":3276,"mtime":1610248424559,"results":"29","hashOfConfig":"24"},{"size":3828,"mtime":1610139705091,"results":"30","hashOfConfig":"24"},{"size":1083,"mtime":1610139705097,"results":"31","hashOfConfig":"24"},{"size":197,"mtime":1610139705095,"results":"32","hashOfConfig":"24"},{"size":254,"mtime":1610139705090,"results":"33","hashOfConfig":"24"},{"size":622,"mtime":1610139705093,"results":"34","hashOfConfig":"24"},{"size":622,"mtime":1610139705091,"results":"35","hashOfConfig":"24"},{"size":634,"mtime":1610139705104,"results":"36","hashOfConfig":"24"},{"size":3692,"mtime":1610252570035,"results":"37","hashOfConfig":"24"},{"size":7292,"mtime":1610252625590,"results":"38","hashOfConfig":"24"},{"size":641,"mtime":1610139705092,"results":"39","hashOfConfig":"24"},{"size":3625,"mtime":1610255857061,"results":"40","hashOfConfig":"24"},{"size":44,"mtime":1610139705097,"results":"41","hashOfConfig":"24"},{"size":5988,"mtime":1610253910542,"results":"42","hashOfConfig":"24"},{"size":3502,"mtime":1610252382826,"results":"43","hashOfConfig":"24"},{"size":47,"mtime":1610139705103,"results":"44","hashOfConfig":"24"},{"size":384,"mtime":1610139705095,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19w1o80",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"/Users/hanguyen/workspace/scentsible/src/index.js",[],["94","95"],"/Users/hanguyen/workspace/scentsible/src/reportWebVitals.js",[],["96","97"],"/Users/hanguyen/workspace/scentsible/src/components/Scentsible.js",[],"/Users/hanguyen/workspace/scentsible/src/components/product/Product.js",[],"/Users/hanguyen/workspace/scentsible/src/components/ApplicationViews.js",["98"],"/Users/hanguyen/workspace/scentsible/src/components/auth/Login.js",["99"],"/Users/hanguyen/workspace/scentsible/src/components/auth/Register.js",[],"/Users/hanguyen/workspace/scentsible/src/components/nav/NavBar.js",[],"/Users/hanguyen/workspace/scentsible/src/components/header/Header.js",[],"/Users/hanguyen/workspace/scentsible/src/components/auth/Logout.js",["100"],"/Users/hanguyen/workspace/scentsible/src/components/group/GroupProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/brand/BrandProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/rating/RatingProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/product/ProductProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/product/ProductForm.js",["101"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ProductContext } from \"./ProductProvider\"\nimport { BrandContext } from \"../brand/BrandProvider\"\nimport { FamilyContext } from \"../family/FamilyProvider\"\nimport { GroupContext } from \"../group/GroupProvider\"\nimport \"./Product.css\"\n\n\nexport const ProductForm = (props) => {\n    const { addProduct, getProductById, updateProduct } = useContext(ProductContext)\n    const { brands, getBrands } = useContext(BrandContext)\n    const { families, getFamilies } = useContext(FamilyContext)\n    const { groups, getGroups } = useContext(GroupContext)\n\n    //Defines and sets current working prodObj state to default values \n    const [prodObj, setProdObj] = useState({\n        name: \"\",\n        image_url: \"\",\n        group_id: 0,\n        brand_id: 0,\n        family_id: 0,\n    })\n    const editMode = props.match.url.split(\"/\")[2] === \"edit\" //Checks URL to determine if in editMode\n    const productId = parseInt(props.match.params.productId)\n\n    //Gets the following on initialization, so that the <select> element presents options to the user\n    useEffect(() => {\n        getGroups()\n        getBrands()\n        getFamilies()\n        \n        if (editMode) {\n            getProductById(productId).then(setProdObj)\n        }\n    }, [])\n\n    //Updates prodObj state variable every time the state of an input fields changes;\n    //Note that 'name' and 'image_url' are text input fields, whereas the others are select drop-downs\n    const handleControlledInputChange = (browserEvent) => {\n        const newProduct = Object.assign({}, prodObj)\n\n        browserEvent.target.name === \"name\" || browserEvent.target.name === \"image_url\"\n        ? (newProduct[browserEvent.target.name] = browserEvent.target.value)\n        : (newProduct[browserEvent.target.name] = parseInt(browserEvent.target.value))\n\n        setProdObj(newProduct)\n    }\n\n    return (\n        <form className=\"form--product\">\n            <h2 className=\"productForm__title\">{editMode ? \"Edit Existing Product\" : \"Add a New Product\"}</h2>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"group_id\">Product Group: </label> */}\n                    <select name=\"group_id\" className=\"form-control\"\n                        value={prodObj.group_id}\n                        onChange={handleControlledInputChange}>\n                        <option value=\"0\">Product Group</option>\n                            {groups.map(group => {\n                                return <option value={group.id}>{group.name}</option>\n                            })}\n                    </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"brand_id\">Brand: </label> */}\n                    <select name=\"brand_id\" className=\"form-control\"\n                        value={prodObj.brand_id}\n                        onChange={handleControlledInputChange}>\n                        <option value=\"0\">Brand</option>\n                        {\n                            brands.map(brand => {\n                                return <option value={brand.id}>{brand.name}</option>\n                            })\n                        }\n                    </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"name\">Product Name: </label> */}\n                    <input type=\"text\" name=\"name\" className=\"form-control\" required autoFocus \n                        placeholder=\"Product Name\"\n                        defaultValue={prodObj.name}\n                        onChange={handleControlledInputChange}\n                    />\n                </div>\n            </fieldset>\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"family_id\">Scent Family: </label> */}\n                    <select name=\"family_id\" className=\"form-control\"\n                        value={prodObj.family_id}\n                        onChange={handleControlledInputChange}>\n                        <option value=\"0\">Scent Family</option>\n                        {\n                            families.map(family => {\n                            return <option value={family.id}>{family.name}</option>\n                            })\n                        }\n                    </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    {/* <label htmlFor=\"image_url\">Image URL </label> */}\n                    <input type=\"text\" name=\"image_url\" className=\"form-control\" required autoFocus \n                        placeholder=\"Image URL\"\n                        defaultValue={prodObj.image_url}\n                        onChange={handleControlledInputChange}\n                    />\n                </div>\n            </fieldset>\n            \n\n            {editMode \n            ? (\n                <div>                    \n                <button \n                    className=\"button--addProduct\"\n                    type=\"submit\"\n                    onClick={clickEvent => {\n                        clickEvent.preventDefault()  // Prevents form from being submitted\n\n                        const revisedProduct = {\n                            id: prodObj.id,\n                            name: prodObj.name,\n                            image_url: prodObj.image_url,\n                            group_id: parseInt(prodObj.group_id),\n                            brand_id: parseInt(prodObj.brand_id),\n                            family_id: parseInt(prodObj.family_id)}\n                        \n                        updateProduct(revisedProduct)  // Sends PUT request to API\n                        .then(() => {props.history.push(`/products`)})  // Sends user back to ProductList\n                    }}\n                >\n                Update\n                </button>\n            </div>\n            )\n            : (\n                <div>                    \n                    <button \n                        className=\"button--addProduct\"\n                        type=\"submit\"\n                        onClick={clickEvent => {\n                            clickEvent.preventDefault()  // Prevents form from being submitted \n\n                            const newProduct = {\n                                name: prodObj.name,\n                                image_url: prodObj.image_url,\n                                group_id: parseInt(prodObj.group_id),\n                                brand_id: parseInt(prodObj.brand_id),\n                                family_id: parseInt(prodObj.family_id)}\n                            \n                            addProduct(newProduct)  // Sends POST request to API\n                            .then(() => {props.history.push(`/products`)})  // Sends user back to ProductList\n\n                            console.log(\"prodObj>>\",prodObj)\n                        }}\n                    >\n                    Save\n                    </button>\n                </div>\n            )\n            }\n                \n        </form>\n    )\n}","/Users/hanguyen/workspace/scentsible/src/components/family/FamilyProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/product/ProductList.js",["102"],"/Users/hanguyen/workspace/scentsible/src/components/product/ProductDetail.js",[],"/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewForm.js",["103","104","105","106"],"/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewProvider.js",[],"/Users/hanguyen/workspace/scentsible/src/components/productreview/ProductreviewList.js",[],"/Users/hanguyen/workspace/scentsible/src/components/home/Homepage.js",["107","108","109","110"],"import React, { useContext, useEffect, useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n\nexport const Homepage = ({ props }) => {\n    return(\n        <>\n            <div>Homepage</div>\n            \n            {/* <button>HAIR</button> \n            <button>SKIN</button> \n            <button>MAKEUP</button> \n            <button>ALL</button>  */}\n        </>\n    )\n}\n  ",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":23},{"ruleId":"121","severity":1,"message":"122","line":41,"column":31,"nodeType":"123","messageId":"124","endLine":41,"endColumn":33},{"ruleId":"117","severity":1,"message":"125","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":35,"column":8,"nodeType":"128","endLine":35,"endColumn":10,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":16,"column":8,"nodeType":"128","endLine":16,"endColumn":10,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"132","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":22},{"ruleId":"117","severity":1,"message":"133","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":23},{"ruleId":"117","severity":1,"message":"134","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":22},{"ruleId":"126","severity":1,"message":"135","line":32,"column":8,"nodeType":"128","endLine":32,"endColumn":10,"suggestions":"136"},{"ruleId":"117","severity":1,"message":"137","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":27},{"ruleId":"117","severity":1,"message":"138","line":1,"column":29,"nodeType":"119","messageId":"120","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"139","line":1,"column":40,"nodeType":"119","messageId":"120","endLine":1,"endColumn":48},{"ruleId":"117","severity":1,"message":"140","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"no-unused-vars","'ProductDetail' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'editMode', 'getBrands', 'getFamilies', 'getGroups', 'getProductById', and 'productId'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["144"],"'BrandContext' is defined but never used.","'FamilyContext' is defined but never used.","'GroupContext' is defined but never used.","React Hook useEffect has missing dependencies: 'editMode', 'getProductById', 'getProductreviewById', 'getRatings', 'productId', and 'productreviewId'. Either include them or remove the dependency array.",["145"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [editMode, getBrands, getFamilies, getGroups, getProductById, productId]",{"range":"152","text":"153"},"Update the dependencies array to be: [getProducts]",{"range":"154","text":"155"},"Update the dependencies array to be: [editMode, getProductById, getProductreviewById, getRatings, productId, productreviewId]",{"range":"156","text":"157"},[1297,1299],"[editMode, getBrands, getFamilies, getGroups, getProductById, productId]",[461,463],"[getProducts]",[1492,1494],"[editMode, getProductById, getProductreviewById, getRatings, productId, productreviewId]"]